class Building {
  openDoor() { print "opening door"; }
}

print Building.methodNames(false);
assert(Building.methodNames(true).length > 1, "should return method names in ancestor classes too");

print isCallable(Building);
print isCallable("string");
print isCallable(fun() { });
print isCallable("string".equals);
print isCallable("string".length);

print "";

print String.ancestors();
print (String("hi"))._singletonClass.ancestors(); // FIXME: weird bug where we need the parens around (String("hi")) (parse error)
print String._singletonClass.ancestors();


__END__
-- expect: --
[openDoor]
true
false
true
true
false

[<class String>,<class Object>]
[<class "hi" (meta)>,<class String>,<class Object>]
[<class String (meta)>,<class Object (meta)>,<class Class>,<class Module>,<class Object>]
