TODO:
* multiple var declaration [DONE], multiple assignment [], return multiple values [DONE]
* splat parameters + splat arguments [DONE]
* object literals, maybe? []
* iterators, with returning iterator with instance iter() method like python,
along with 'for elem in obj' syntax [DONE]
* private methods, maybe? []
* all classes inherit from Object automatically [DONE]
* ["propName"] and ["propName"]= for dynamic property get and set [DONE]
* add builtin Array class instead of using LoxArray, use LoxInstance with
class of Array [DONE]
* add builtin String class instead of using java StringBuffer, use LoxInstance with
class of String [DONE]
* Add way to cast strings to numbers
* Add string interpolation, maybe?
* add standard Error classes []
* throw Interrupt errors on interrupts, so the program can catch them when
the interpreter is running. []
* signal handling []
* add keyword arguments []
* default arguments for functions []
* allow overridden methods with different number of arguments []
* frozen objects, can't use setProperty on the instance [DONE]
* better library []
* add test suite [DONE]
* add '+=, -=,' etc binary operators [DONE]
* class (static) methods and properties [DONE]
* add Object#dup method, which shallow copies an object and its properties [DONE]
* add Object#initDup hook for duplicated objects [DONE]
* Figure out what it means to dup a class. Should this be possible? It is in
Ruby, for example.
* Add builtin class Class, like Ruby. Class constructor creates new anon class. [DONE]
* Add constants, all caps maybe, or start with caps. []
* Allow re-opening classes [DONE]
* Add singleton classes. If so, would have to re-implement static functions [DONE]
* Add `in(expr) { }` construct like JavaScript's with or Ruby's instance_eval [DONE].
* Add eval(String) for evaling code.
* Add way to load other script files []
* Add way to nest classes within classes and refer to nested classes by scoped
names. []
