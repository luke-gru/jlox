TODO:
* multiple assignment []
* throw Interrupt errors on interrupts, so the program can catch them when
the interpreter is running. []
* signal handling [DONE]
* add keyword arguments [DONE, NEEDS TESTING], could use more testing though
* Figure out what it means to dup a class. Should this be possible? It is in
Ruby, for example. If not, disallow. []
* Allow undefining methods and functions (undef) []
* Add more files to stdlib []
* Make functions LoxInstances, instead of treating them differently. []
* Add Class#methodNames(bool), Class#getterNames(bool) and
Class#setterNames(bool) methods []
* Add ArrayIterator, like MapIterator? [] Not sure if needed
* Add Object#opCmp hook method, which returns -1, 0, or 1. []
* Get rid of the throw new RuntimeError calls in the interpreter, replace with
calls to throwLoxError. Also, give a token to throwLoxError so that we can
report the line of the error. This token should live in the wrapper exception
class of the error, the RuntimeThrow class. [MOSTLY DONE, COULD BE BETTER]
* Make stack traces and error messages include the given file, and add more
useful info. [] This should work for scanner errors, parser errors and
interpreter errors.
* Add modules like Ruby's? As in, definitions of static and instance methods
that can be reused across classes. [DONE, NEEDS MORE TESTING]
* Fix debugger so that next/step works in loops []
* Make undefined variable not throw RuntimeError in Environment class, but
throw a lox error in the interpreter, NameError?
* Add global method cache like Ruby for objects []
